#!/bin/bash

main() {
  for ((i = 0; i < 256; i += 1)); do
    printf "%3d\t%8s\n" ${i} "$(to_binary_string ${i})"
  done
}

fail() {
  local -r message=$1
  echo "Error: ${message}" 1>&2 && exit 1
}

is_integer() {
  if [[ "$1" =~ ^[+-]?(0|[1-9][0-9]*)$ ]]; then
    return 0
  else
    return 1
  fi
}

to_binary_string() {
  is_integer "$1" || fail 'to_binary_string() expects integer'

  local -i int=$1

  if ((int < 0)); then
    fail 'to_binary_string() expects nonnegative integer'
  fi

  if ((int == 0)); then
    echo '0' && return
  fi

  local binary_string=''

  while ((int > 0)); do
    binary_string="$((int % 2))${binary_string}"
    ((int /= 2))
  done

  echo "${binary_string}" && return
}

[ "${BASH_SOURCE[0]}" == "$0" ] && main "$@"
